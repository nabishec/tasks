-- create table
CREATE TABLE book(
    book_id INT PRIMARY KEY AUTO_INCREMENT,
    title VARCHAR(50),
    author VARCHAR(30),
    price DECIMAL(8,2),
    amount INT
);
/*Для создания таблицы используется SQL-запрос. В нем указывается какая таблица создается, из каких атрибутов(полей) она состоит и какой тип данных имеет каждое поле, при необходимости указывается описание полей (ключевое поле и т.д.). Его структура :

    ключевые слова : CREATE TABLE
    имя создаваемой таблицы;
    открывающая круглая скобка «(»;
    название поля и его описание, которое включает тип поля и другие необязательные характеристики;
    запятая;
    название поля и его описание;
    ...
    закрывающая скобка «)».

Рекомендации по записи SQL запроса

    Ключевые слова: SQL не является регистрозависимым языком (CREATE и create - одно и тоже ключевое слово). 
    Ключевые слова SQL и типы данных рекомендуется  записывать прописными (большими) буквами.
    Имена таблиц и полей - строчными (маленькими) буквами.
    SQL-запрос можно писать на нескольких строках.
    В конце SQL-запроса ставится точка с запятой (хотя если Вы пишете один запрос, это необязательно).
*/



-- inserting into table
INSERT INTO book (title,author,price,amount)
VALUES ('Мастер и Маргарита', 'Булгаков М.А.',670.99,3);

INSERT INTO book (title, author, price, amount)
VALUES ("Белая гвардия", "Булгаков М.А.", 540.50, 5);

INSERT INTO book (title, author, price, amount)
VALUES ("Идиот", "Достоевский Ф.М.", 460.00, 10);

INSERT INTO book (title, author, price, amount)
VALUES ("Братья Карамазовы", "Достоевский Ф.М.", 799.01, 2);

SELECT * FROM book;
/*Для занесения новой записи в таблицу используется SQL запрос, в котором указывается в какую таблицу, в какие поля заносить новые значения. Структура запроса:

    ключевые слова INSERT INTO (ключевое слово INTO можно пропустить);
    имя таблицы, в которую добавляется запись;
    открывающая круглая скобка «(»;
     список полей через запятую, в которые следует занести новые данные;
    закрывающая скобка «)»;
    ключевое слово VALUES;
    открывающая круглая скобка «(»;
    список значений через запятую, которые заносятся в соответствующие поля, при этом текстовые значения заключаются в кавычки, числовые значения записываются без кавычек, в качестве разделителя целой и дробной части используется точка;
    закрывающая скобка «)».
При составлении списка полей и списка значений необходимо учитывать следующее:

    количество полей и количество значений в списках должны совпадать;
    должно существовать прямое соответствие между позицией одного и того же элемента в обоих списках, поэтому первый элемент списка значений должен относиться к первому столбцу в списке столбцов, второй – ко второму столбцу и т.д.;
     типы данных элементов в списке значений должны быть совместимы с типами данных соответствующих столбцов таблицы ( целое число можно занести в поле типа DECIMAL, обратная операция - недопустима);
    новые значения нельзя добавлять в поля, описанные как PRIMARY KEY AUTO_INCREMENT;
    рекомендуется заполнять все поля записи, если же поле пропущено, значение этого поля зависит от установленных по умолчанию значений, если значения не установлены - на данной платформе вставляется пустое значение (NULL).
*/



-- Retrieving all data from table
SELECT * FROM book;
/*Для того чтобы отобрать все данные из таблицы используется SQL запрос следующей структуры: 

    ключевое слово SELECT; 
    символ « *» ; 
    ключевое слово FROM; 
    имя таблицы.
Результатом является таблица, в которую включены все строки и столбцы указанной в запросе таблицы.
*/



-- Selecting individual columns
SELECT author, title, price FROM book;
/*Для того чтобы отобрать данные из определенных столбцов таблицы используется SQL запрос следующей структуры: 

    ключевое слово SELECT ; 
    список столбцов таблицы через запятую; 
    ключевое слово FROM ; 
    имя таблицы.
Результатом является таблица, в которую включены все данные из указанных после SELECT столбцов исходной таблицы.
*/



-- Assigning alians to columns when making selection
SELECT title AS Название, author AS Автор
FROM book;
/*Для того чтобы отобрать данные из определенных столбцов таблицы и одновременно задать столбцам новые названия в результате выборки используется SQL запрос следующей структуры: 

    ключевое слово SELECT ; 
    имя столбца;
    ключевое слово AS ; 
    новое название столбца (можно русскими буквами), выводимое в результате запроса, но это должно быть одно слово, если название состоит из двух слов – соединяйте их подчеркиванием, например, Количество_книг; 
    запятая; 
    имя столбца; 
    <Enter>
    ключевое слово FROM ; 
    имя таблицы.
В одном запросе можно использовать и имена столбцов из таблицы, и новые названия.
Результатом является таблица, в которую включены все данные из указанных после SELECT столбцов исходной таблицы. Каждому столбцу в результате запроса присваивается новое имя, заданное после AS, или столбец получает имя столбца исходной таблицы, если AS отсутствует.
*/



-- Retrieving data with creating calculated column
SELECT title,amount,
    amount * 1.65 AS pack
FROM book;
/*С помощью SQL запросов можно осуществлять вычисления по каждой строке таблицы с помощью вычисляемого столбца. Для него в списке полей после оператора SELECT указывается выражение и задается имя.

Выражение может включать имена столбцов, константы, знаки операций, встроенные функции.

Результатом является таблица, в которую включены все данные из указанных после SELECT столбцов, а также новый столбец, в каждой строке которого вычисляется заданное выражение.

Пояснение от слушателя. Можно осуществлять арифметические и логические вычисления над целым столбцом, результатом будет новый столбец.
*/



