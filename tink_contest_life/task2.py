'''Ваня принес на кухню рулет, который он хочет разделить с коллегами. Для этого он хочет разрезать рулет на N равных частей. Разумеется, рулет можно резать только поперек. Соотвественно, Костя сделает ﻿N−1N−1﻿ разрез ножом через равные промежутки.


По возвращению с кофе-брейка Ваня задумался — а можно ли было обойтись меньшим числом движений, будь нож Вани бесконечно длинным (иначе говоря, если он мог бы сделать сколько угодно разрезов за раз, если эти разрезы лежат на одной прямой)? Считается, что места для разрезов намечены заранее, и все разрезы делаются с ювелирной точностью.

Оказывается, что можно. Например, если Ваня хотел бы разделить рулет на 4 части, он мог бы обойтись двумя разрезами — сначала он разделил бы рулет на две половинки, а потом совместил бы две половинки и разрезал обе пополам одновременно.

Вам дано число N, требуется сказать, каким минимальным числом разрезов можно обойтись.


Формат входных данных

Дано одно натуральное число N(1≤N≤2×109)N(1≤N≤2×109) — количество людей на кофе-брйке.


Формат выходных данных

Выведите одно число — минимальное число движений, которое придется сделать Косте.'''
def group(n):
    if n <= 1:
        return 0
    count = 0
    quaer = 1
    while n > quaer:
        count += 1
        quaer *= 2
    return count
print(group(int(input())))
    
'''Логика решения простая минимальное число движений для разделения рулета на 4 - это 2, а для 5 - это 3. Разделив пятерку на две части,
каждая из них будет меньше/равна 4 следовательно минимальное число будет на 1 больше. Немного подумав понимаем что такое продолжается,
до следующей степени 2 ( в этом случае 8), а для частей после 8 будет необходимо уже 4 разреза, так как они будут делиться на две части,
одна из которых больше 4'''